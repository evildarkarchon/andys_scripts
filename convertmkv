#!/usr/bin/python3.5
import tempfile
import argparse
import pathlib

from andy.runprogram import runprogram
from andy.colors import Color
from andy.sortentries import sortentries

colors=Color()

args=argparse.ArgumentParser()
args.add_argument("--ffmpeg", "-f", action="store_true", help="Use ffmpeg instead of mkvmerge. (Doesn't like mpeg-1 files)")
args.add_argument("--combine", "-c", action="store_true", help="Combine multiple files into one mkv file.")
args.add_argument("--output", "-o", help="Name of output file (for concatenation mode only).")
args.add_argument("--no-sort", "-ns", help="Do not sort the file names to be used for the file list.")
args.add_argument("files", nargs="*", help="Files to be muxed.")

options=vars(args.parse_args())

if not options["files"]:
    print("{} No files specified.".format(colors.mood("sad")))
    raise ValueError

if options["no_sort"]:
    filelist=options["files"]
else:
    filelist=sortentries(options["files"])

if options["combine"]:
    if not options["output"]:
        print("{} Output file name has not been specified.".format(colors.mood("sad")))
        raise ValueError
    print("{} Combining files into {}".format(colors.mood("happy"), options["output"]))

    if options["ffmpeg"]:
        with tempfile.NamedTemporaryFile(mode="a") as mkvlist:
            for filename in filelist:
                mkvlist.write("file '{}'\n".format(filename))
            runprogram("ffmpeg", "-f", "concat", "-i", mkvlist.name, "-c", "copy", options["output"])
    else:
        files=" + ".join(filelist)
        runprogram("mkvmerge", "-o", options["output"], files)

else:
    for filename in filelist:
        filepath=pathlib.Path(filename)
        print("{} Muxing {} into a matroska file.".format(colors.mood("happy"), filename))
        if filepath.exists():
            if options["ffmpeg"]:
                runprogram(["ffmpeg", "-i", filename, "-c", "copy", "-f", "matroska", str(filepath.with_suffix(".mkv"))])
            else:
                runprogram(["mkvmerge", "-o", str(filepath.with_suffix(".mkv")), "=", filename])
