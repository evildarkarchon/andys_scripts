#!/usr/bin/env python3
import pathlib
import argparse
from PIL import Image


args = argparse.ArgumentParser()
args.add_argument("--format", "-f", default="webp", help="Output format for the image files")
args.add_argument("--output-dir", "-o", default=str(pathlib.Path.cwd()), help="Directory to save the output files.")
args.add_argument("--backup-dir", "-b", default=str(pathlib.Path.cwd().joinpath("Original Files")))
args.add_argument("files", help="Files to be converted.")

options = vars(args.parse_args())

for infile in options["files"]:
    inpath = pathlib.Path(infile)
    _intpath = inpath.stem.with_suffix(".{}".format(options["format"]))
    outpath = pathlib.Path(options["outputdir"]).joinpath(str(_intpath.name))
    outfile = str(outpath)
    if infile != outfile:
        try:
            Image.open(infile).save(outfile)
        except IOError:
            print("cannot convert", infile)
