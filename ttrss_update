#!/usr/bin/python3.5
import atexit
import pathlib
import datetime
import argparse

from andy.colors import Color
from andy.git import Git
from andy.runprogram import runprogram
from andy.privileged import is_privileged

args=argparse.ArgumentParser()
args.add_argument("--aggressive", help="Run garbage collection in aggressive mode")
options=vars(args.parse_args())

colors=Color()

ttrss=Git("/data/web/feeds", use_sudo=True, sudo_user="nginx", url="https://tt-rss.org/gitlab/fox/tt-rss.git")

atexit.register(ttrss.clean_lock)

def ttrssgcfile():
    if not is_privileged():
        runprogram(["touch", "/var/cache/ttrssgc"], use_sudo=True, sudo_user="root")
    else:
        pathlib.Path("/var/cache/ttrssgc").touch()

if not pathlib.path("/var/cache/ttrssgc").is_file():
    ttrssgcfile()

def ttrssgc(now, then):
    diff=now-then
    if diff.days > 30:
        ttrss.gc(aggressive=options["aggressive"])
        ttrssgcfile()

if pathlib.Path("/data/web/feeds/.git").is_dir():
    ttrss.clean_lock()
    ttrss.pull()
elif pathlib.Path("/data/web/feeds").exists() and not pathlib.Path("/data/web/feeds/.git").exists():
    print("{} No git repository located in the target directory.".format(colors.mood("sad")))
    raise FileNotFoundError
elif pathlib.Path("/data/web/feeds").is_file():
    print("{} Target location is a file, renaming and cloning repository.".format(colors.mood("neutral")))
    runprogram(["mv", "/data/web/feeds", "/data/web/feeds.bad"], use_sudo=True, sudo_user="nginx")
    ttrss.clone()
else:
    print("{} Target location does not exist, cloning repository.".format(colors.mood("neutral")))
    ttrss.clone()

ttrssgc(datetime.now(), datetime.fromtimestamp(pathlib.Path("/var/cache/ttrssgc").stat().st_mtime))
